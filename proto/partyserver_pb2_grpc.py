# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from proto import partyserver_pb2 as proto_dot_partyserver__pb2


class PartyServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.watch = channel.unary_unary(
                '/party.PartyServer/watch',
                request_serializer=proto_dot_partyserver__pb2.WatchRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.joinParty = channel.unary_unary(
                '/party.PartyServer/joinParty',
                request_serializer=proto_dot_partyserver__pb2.WatchPartyRequest.SerializeToString,
                response_deserializer=proto_dot_partyserver__pb2.PartyResponse.FromString,
                )
        self.pauseParty = channel.unary_unary(
                '/party.PartyServer/pauseParty',
                request_serializer=proto_dot_partyserver__pb2.WatchParty.SerializeToString,
                response_deserializer=proto_dot_partyserver__pb2.PartyResponse.FromString,
                )
        self.playParty = channel.unary_unary(
                '/party.PartyServer/playParty',
                request_serializer=proto_dot_partyserver__pb2.WatchParty.SerializeToString,
                response_deserializer=proto_dot_partyserver__pb2.PartyResponse.FromString,
                )
        self.endPart = channel.unary_unary(
                '/party.PartyServer/endPart',
                request_serializer=proto_dot_partyserver__pb2.WatchParty.SerializeToString,
                response_deserializer=proto_dot_partyserver__pb2.PartyResponse.FromString,
                )


class PartyServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def watch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def joinParty(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def pauseParty(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def playParty(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def endPart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PartyServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'watch': grpc.unary_unary_rpc_method_handler(
                    servicer.watch,
                    request_deserializer=proto_dot_partyserver__pb2.WatchRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'joinParty': grpc.unary_unary_rpc_method_handler(
                    servicer.joinParty,
                    request_deserializer=proto_dot_partyserver__pb2.WatchPartyRequest.FromString,
                    response_serializer=proto_dot_partyserver__pb2.PartyResponse.SerializeToString,
            ),
            'pauseParty': grpc.unary_unary_rpc_method_handler(
                    servicer.pauseParty,
                    request_deserializer=proto_dot_partyserver__pb2.WatchParty.FromString,
                    response_serializer=proto_dot_partyserver__pb2.PartyResponse.SerializeToString,
            ),
            'playParty': grpc.unary_unary_rpc_method_handler(
                    servicer.playParty,
                    request_deserializer=proto_dot_partyserver__pb2.WatchParty.FromString,
                    response_serializer=proto_dot_partyserver__pb2.PartyResponse.SerializeToString,
            ),
            'endPart': grpc.unary_unary_rpc_method_handler(
                    servicer.endPart,
                    request_deserializer=proto_dot_partyserver__pb2.WatchParty.FromString,
                    response_serializer=proto_dot_partyserver__pb2.PartyResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'party.PartyServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PartyServer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def watch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/party.PartyServer/watch',
            proto_dot_partyserver__pb2.WatchRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def joinParty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/party.PartyServer/joinParty',
            proto_dot_partyserver__pb2.WatchPartyRequest.SerializeToString,
            proto_dot_partyserver__pb2.PartyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def pauseParty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/party.PartyServer/pauseParty',
            proto_dot_partyserver__pb2.WatchParty.SerializeToString,
            proto_dot_partyserver__pb2.PartyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def playParty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/party.PartyServer/playParty',
            proto_dot_partyserver__pb2.WatchParty.SerializeToString,
            proto_dot_partyserver__pb2.PartyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def endPart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/party.PartyServer/endPart',
            proto_dot_partyserver__pb2.WatchParty.SerializeToString,
            proto_dot_partyserver__pb2.PartyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
