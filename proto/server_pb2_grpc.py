# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from proto import server_pb2 as proto_dot_server__pb2


class CdnServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getAllVideos = channel.unary_stream(
                '/server.CdnServer/getAllVideos',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=proto_dot_server__pb2.VideoInfo.FromString,
                )
        self.getVideoInformation = channel.unary_unary(
                '/server.CdnServer/getVideoInformation',
                request_serializer=proto_dot_server__pb2.VideoRequest.SerializeToString,
                response_deserializer=proto_dot_server__pb2.VideoInfo.FromString,
                )
        self.StreamVideo = channel.unary_stream(
                '/server.CdnServer/StreamVideo',
                request_serializer=proto_dot_server__pb2.VideoRequest.SerializeToString,
                response_deserializer=proto_dot_server__pb2.Chunk.FromString,
                )
        self.UploadVideo = channel.stream_unary(
                '/server.CdnServer/UploadVideo',
                request_serializer=proto_dot_server__pb2.Chunk.SerializeToString,
                response_deserializer=proto_dot_server__pb2.UploadResponse.FromString,
                )
        self.RequestToUpload = channel.unary_unary(
                '/server.CdnServer/RequestToUpload',
                request_serializer=proto_dot_server__pb2.UploadToServerRequest.SerializeToString,
                response_deserializer=proto_dot_server__pb2.UploadResponse.FromString,
                )
        self.get_new_titles = channel.unary_stream(
                '/server.CdnServer/get_new_titles',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=proto_dot_server__pb2.Title.FromString,
                )
        self.get_video = channel.unary_stream(
                '/server.CdnServer/get_video',
                request_serializer=proto_dot_server__pb2.Title.SerializeToString,
                response_deserializer=proto_dot_server__pb2.Chunk.FromString,
                )


class CdnServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getAllVideos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getVideoInformation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamVideo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadVideo(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RequestToUpload(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_new_titles(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_video(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CdnServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getAllVideos': grpc.unary_stream_rpc_method_handler(
                    servicer.getAllVideos,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=proto_dot_server__pb2.VideoInfo.SerializeToString,
            ),
            'getVideoInformation': grpc.unary_unary_rpc_method_handler(
                    servicer.getVideoInformation,
                    request_deserializer=proto_dot_server__pb2.VideoRequest.FromString,
                    response_serializer=proto_dot_server__pb2.VideoInfo.SerializeToString,
            ),
            'StreamVideo': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamVideo,
                    request_deserializer=proto_dot_server__pb2.VideoRequest.FromString,
                    response_serializer=proto_dot_server__pb2.Chunk.SerializeToString,
            ),
            'UploadVideo': grpc.stream_unary_rpc_method_handler(
                    servicer.UploadVideo,
                    request_deserializer=proto_dot_server__pb2.Chunk.FromString,
                    response_serializer=proto_dot_server__pb2.UploadResponse.SerializeToString,
            ),
            'RequestToUpload': grpc.unary_unary_rpc_method_handler(
                    servicer.RequestToUpload,
                    request_deserializer=proto_dot_server__pb2.UploadToServerRequest.FromString,
                    response_serializer=proto_dot_server__pb2.UploadResponse.SerializeToString,
            ),
            'get_new_titles': grpc.unary_stream_rpc_method_handler(
                    servicer.get_new_titles,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=proto_dot_server__pb2.Title.SerializeToString,
            ),
            'get_video': grpc.unary_stream_rpc_method_handler(
                    servicer.get_video,
                    request_deserializer=proto_dot_server__pb2.Title.FromString,
                    response_serializer=proto_dot_server__pb2.Chunk.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'server.CdnServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CdnServer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getAllVideos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/server.CdnServer/getAllVideos',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            proto_dot_server__pb2.VideoInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getVideoInformation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/server.CdnServer/getVideoInformation',
            proto_dot_server__pb2.VideoRequest.SerializeToString,
            proto_dot_server__pb2.VideoInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StreamVideo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/server.CdnServer/StreamVideo',
            proto_dot_server__pb2.VideoRequest.SerializeToString,
            proto_dot_server__pb2.Chunk.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UploadVideo(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/server.CdnServer/UploadVideo',
            proto_dot_server__pb2.Chunk.SerializeToString,
            proto_dot_server__pb2.UploadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RequestToUpload(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/server.CdnServer/RequestToUpload',
            proto_dot_server__pb2.UploadToServerRequest.SerializeToString,
            proto_dot_server__pb2.UploadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_new_titles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/server.CdnServer/get_new_titles',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            proto_dot_server__pb2.Title.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_video(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/server.CdnServer/get_video',
            proto_dot_server__pb2.Title.SerializeToString,
            proto_dot_server__pb2.Chunk.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
